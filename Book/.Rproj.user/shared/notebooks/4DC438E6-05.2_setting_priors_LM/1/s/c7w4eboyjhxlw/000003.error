{"frames":[{"func":"set_restrictions(make_model(\"X->Y\"), c(\"Y[X=1]==1\", \"X==1\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"restrict_by_query(model, statement = statement, join_by = join_by, \n    keep = keep, update_types = update_types)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(1:n_restrictions, function(i) {\n    map_query_to_nodal_type(model, query = statement[i], join_by = join_by[i])\n})","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"map_query_to_nodal_type(model, query = statement[i], join_by = join_by[i])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"No outcome variable specified. If required, specify roots as X[]==1 not X==1.\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in map_query_to_nodal_type(model, query = statement[i], join_by = join_by[i]) : \n  No outcome variable specified. If required, specify roots as X[]==1 not X==1.\n"}